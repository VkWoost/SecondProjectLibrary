@{
    var user = @User.Identity.Name;
    var admin = "admin@gmail.com";
    if (user == admin)
        Layout = "~/Views/Shared/_AdminLayout.cshtml";
    else
        Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html>
<head>
    <title></title>
    <link href="~/kendoui/styles/kendo.common.min.css" rel="stylesheet" />
    <link href="~/kendoui/styles/kendo.default.min.css" rel="stylesheet" />
    <link href="~/kendoui/styles/kendo.default.mobile.min.css" rel="stylesheet" />

    <script src="~/kendoui/js/jquery.min.js"></script>
    <script src="~/kendoui/js/kendo.all.min.js"></script>

</head>
<body>
    <div id="example">
        <div id="grid"></div>

        <script>
            $(document).ready(function () {
                dataSource = new kendo.data.DataSource({
                    transport: {
                        read: function (e) {
                            $.ajax({
                                url: '/Book/GetBooks',
                                type: "GET",
                                dataType: "json",
                                success: function (result) {
                                    e.success(result);
                                },
                                error: function (result) {
                                    e.error(result);
                                }
                            });
                        },
                        create: function (options) {
                            $.ajax({
                                url: '/Book/AddBook',
                                type: "POST",
                                dataType: "json",
                                data: {
                                    bookViewModel: options.data
                                },
                                success: function (result) {
                                    options.success(result);
                                },
                                error: function (result) {
                                    options.error(result);
                                }
                            });
                        },
                        update: function (opt) {
                            $.ajax({
                                url: '/Book/BookEdit',
                                type: "POST",
                                dataType: "json",
                                data: {
                                    bookViewModel: opt.data
                                },
                                success: function (result) {
                                    opt.success(result);
                                },
                                error: function (result) {
                                    opt.error(result);
                                },
                            });
                        },
                        destroy: function (options) {
                            $.ajax({
                                url: '/Book/DeleteBook/' + options.data.Id,
                                type: "POST",
                                dataType: "json",
                                success: function (result) {
                                    options.success(result);
                                },
                                error: function (result) {
                                    options.error(result);
                                }
                            });
                        },

                        parameterMap: function (options, operation) {
                            if (operation !== "read" && options.models) {
                                return { models: kendo.stringify(options.models) };
                            }
                        }
                    },
                    batch: false,
                    pageSize: 20,
                    schema: {
                        model: {
                            id: "Id",
                            fields: {
                                Id: { editable: false, nullable: true },
                                AuthorId: {},
                                Name: { validation: { required: true } },
                                YearOfPublication: { validation: { required: true } },
                                Author: { validation: { required: true } },
                                PublicationHouses: { validation: { required: true } }
                            }
                        }
                    }
                });

            var user = '@User.Identity.Name'
                admin = "admin@gmail.com"
                if (user == admin) {
                    $("#grid").kendoGrid({
                        dataSource: dataSource,
                        pageable: true,
                        height: 550,
                        toolbar: ["create"],
                        columns: [
                            { field: "Name", title: "Name" },
                            { field: "YearOfPublication", title: "Year Of Publication" },
                            { field: "Author.Name", title: "Author", editor: authorEditor },
                            { field: "PublicationHouses", title: "Publication Houses", editor: phEditor },
                            { command: ["edit", "destroy"], title: "&nbsp;", width: "250px" }],
                        editable: "popup"
                    });
                }
                else {
                    $("#grid").kendoGrid({
                        dataSource: dataSource,
                        pageable: true,
                        height: 550,
                        columns: [
                            { field: "Name", title: "Name" },
                            { field: "YearOfPublication", title: "Year Of Publication" },
                            { field: "Author.Name", title: "Author", editor: authorEditor },
                            { field: "PublicationHouses", title: "Publication Houses", editor: phEditor },
                            ],
                        editable: "popup"
                    });
                }
            });

            function authorEditor(container, options) {
                $('<input name="AuthorId">').appendTo(container)
                    .kendoDropDownList({
                        dataSource: new kendo.data.DataSource({
                            transport: {
                                read: {
                                    url: '/Author/GetAuthors',
                                }
                            }
                        }),
                        dataTextField: "Name",
                        dataValueField: "Id"
                    });
            }
            function phEditor(container, options) {
                $('<input name="PublicationHouses">').appendTo(container)
                    .kendoMultiSelect({
                        dataSource: new kendo.data.DataSource({
                            transport: {
                                read: {
                                    url: '/PublicationHouse/GetPublicationHouses',
                                }
                            }
                        }),
                        dataTextField: "Name",
                        dataValueField: "Id",
                    });
            }
        </script>
    </div>
</body>
</html>